/*
 * Sub-licenses:
 *         https://github.com/google/material-design-icons/blob/master/LICENSE
 *         https://github.com/Templarian/MaterialDesign/blob/master/LICENSE
 *         https://android.googlesource.com/platform/prebuilts/maven_repo/android/+/master/NOTICE.txt
 * This project:
 *         Copyright (C) 2019 Penn Mackintosh
 *         Licensed under https://www.gnu.org/licenses/gpl-3.0.en.html
 */

plugins {
    id 'com.gladed.androidgitversion' version '0.4.9'
}

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "tk.hack5.treblecheck"
        minSdkVersion 22
        targetSdkVersion 29
        versionCode androidGitVersion.code()
        versionName androidGitVersion.name()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            if (file('signing.properties').exists()) {
                apply from: 'signing.properties'
                storeFile file(releaseStoreFile)
                storePassword releaseStorePassword
                keyAlias releaseKeyAlias
                keyPassword releaseKeyPassword
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            if (!project.hasProperty("gplayDebug"))
                ext.gplayDebug = false
            if (project.properties['gplayDebug'] == true || !file('billing.properties').exists()) {
                buildConfigField "boolean", "DONATIONS_DEBUG", "true"
                buildConfigField "String", "GPLAY_PUBK", "\"\""
                buildConfigField "String[]", "GPLAY_KEYS", "{}"
                buildConfigField "String[]", "GPLAY_VALS", "{}"
                buildConfigField "String", "PAYPAL_EMAIL", "\"example@example.com\""
                buildConfigField "String", "PAYPAL_CURRENCY", "\"USD\""
                buildConfigField "String", "PAYPAL_DESCRIPTION", "\"Testing!\""
            } else {
                apply from: 'billing.properties'
                buildConfigField "boolean", "DONATIONS_DEBUG", "false"
                buildConfigField "String", "GPLAY_PUBK", gplayPubk
                buildConfigField "String[]", "GPLAY_KEYS", gplayKeys
                buildConfigField "String[]", "GPLAY_VALS", gplayVals
                buildConfigField "String", "PAYPAL_EMAIL", paypalEmail
                buildConfigField "String", "PAYPAL_CURRENCY", paypalCurrency
                buildConfigField "String", "PAYPAL_DESCRIPTION", paypalDescription
            }
        }
        debug {
            if (!project.hasProperty("gplayDebug"))
                ext.gplayDebug = true
            if (project.properties['gplayDebug'] == true || !file('billing.properties').exists()) {
                buildConfigField "boolean", "DONATIONS_DEBUG", "true"
                buildConfigField "String", "GPLAY_PUBK", "\"\""
                buildConfigField "String[]", "GPLAY_KEYS", "{}"
                buildConfigField "String[]", "GPLAY_VALS", "{}"
                buildConfigField "String", "PAYPAL_EMAIL", "\"example@example.com\""
                buildConfigField "String", "PAYPAL_CURRENCY", "\"USD\""
                buildConfigField "String", "PAYPAL_DESCRIPTION", "\"Testing!\""
            } else {
                apply from: 'billing.properties'
                buildConfigField "boolean", "DONATIONS_DEBUG", "false"
                buildConfigField "String", "GPLAY_PUBK", gplayPubk
                buildConfigField "String[]", "GPLAY_KEYS", gplayKeys
                buildConfigField "String[]", "GPLAY_VALS", gplayVals
                buildConfigField "String", "PAYPAL_EMAIL", paypalEmail
                buildConfigField "String", "PAYPAL_CURRENCY", paypalCurrency
                buildConfigField "String", "PAYPAL_DESCRIPTION", paypalDescription
            }
        }
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
    implementation 'com.google.android.material:material:1.1.0-alpha09'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.github.penn5:donations:v3.1.3'
}
